name: CD Deploy to Server


on:
  workflow_dispatch:   # 수동 배포용
  workflow_run:        # docker-publish 성공 뒤 자동 배포
    workflows: [ "CI Build and Push Docker" ]
    types: [ completed ]

jobs:
  deploy:
    if: >
      (github.event_name == 'workflow_dispatch') ||
      (github.event.workflow_run.conclusion == 'success')
    runs-on: self-hosted          # ← 로컬 PC 러너라면 그대로

    # .github/workflows/cd.yml (부분)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Write .env file
        run: | 
            @"
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            "@ | Out-File -Encoding ASCII .env
        shell: powershell
  
      - name: Pull & restart container
        run: |
          $ErrorActionPreference = "Stop"
          
          $image = "docker.io/${{ secrets.DOCKERHUB_USERNAME }}/spring-thyme-app:latest"
          Write-Output "Pulling image: $image"
          docker pull $image
      
          try {
            docker stop spring-app
            docker rm spring-app
          } catch {
            Write-Output "spring-app 컨테이너가 존재하지 않아도 계속 진행합니다."
          }
          docker image prune -af
          
          docker compose up -d app
        shell: powershell
            
