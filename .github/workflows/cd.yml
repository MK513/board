name: CD Deploy to Server

on:
  workflow_dispatch:   # 수동 배포용
  workflow_run:        # docker-publish 성공 뒤 자동 배포
    workflows: [ "CI Build and Push Docker" ]
    types: [ completed ]
    branches: [ "main" ]

jobs:
  deploy:
    if: >
      (github.event_name == 'workflow_dispatch') ||
      (github.event.workflow_run.conclusion == 'success')
    runs-on: self-hosted          # ← 로컬 PC 러너라면 그대로

    steps:
      - name: Checkout (logs only)
        uses: actions/checkout@v4

      # --- ① GHCR 로그인 ---
      - name: Login to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io \
               -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      # --- ② 이미지 Pull & 재기동 ---
      - name: Pull latest image and restart
        run: |
          TAG=${{ github.event.inputs.image_tag || 'latest' }}
          IMAGE=ghcr.io/${{ secrets.GHCR_USERNAME }}/spring-thyme-app:$TAG

          echo "Pull $IMAGE"
          docker pull $IMAGE

          echo "Stop / Remove old container (if any)"
          docker stop spring-app || true
          docker rm   spring-app || true

          echo "Run new container"
          docker run -d --name spring-app -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=prod \
            $IMAGE
            
    # runs-on: ubuntu-latest

    # steps:
    #   # ② (선택) 실행 중인 다른 워크플로 로그 확인용
    #   - name: Checkout (for logs only)
    #     uses: actions/checkout@v4

    #   # ③ SSH 접속해 컨테이너 교체
    #   - name: SSH into server and deploy
    #     uses: appleboy/ssh-action@v1.0.3
    #     with:
    #       host:     ${{ secrets.SSH_HOST }}     # 예: 13.124.xxx.xxx
    #       username: ${{ secrets.SSH_USER }}     # 예: ec2-user
    #       key:      ${{ secrets.SSH_KEY }}      # 개인키(PKCS8) 내용
    #       script: |
    #         set -e

    #         echo "🔐 Docker Hub 로그인"
    #         docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

    #         echo "📥 최신 이미지 Pull"
    #         docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-thyme-app:latest

    #         echo "🛑 기존 컨테이너 중지 및 삭제(없어도 무시)"
    #         docker stop spring-app || true
    #         docker rm   spring-app || true

    #         echo "🚀 새 컨테이너 기동"
    #         docker run -d --name spring-app \
    #           -p 8080:8080 \
    #           -e SPRING_PROFILES_ACTIVE=prod \
    #           -e FILE_DIR=/data/files \
    #           -v /opt/spring/files:/data/files \
    #           ${{ secrets.DOCKERHUB_USERNAME }}/spring-thyme-app:latest
