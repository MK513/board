# Unified CI/CD workflow – builds, tests, and pushes Docker image in one job
# CI 단계에서 단 한 번만 JAR을 빌드하고, 같은 러너에서 Docker 이미지를 만들어
# Docker Hub로 푸시합니다. 이후 별도 job에서 의존성 그래프를 제출합니다.
#
# main 브랜치 Push & PR 양쪽 모두 실행하며, Docker Push 는 main 브랜치 직빵일 때만 수행.

name: CI Build Test and Docker Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read     # checkout
      packages: write    # docker/login-action needs this for rate‑limit increase

    steps:
      # 1. 소스 체크아웃
      - uses: actions/checkout@v4

      # 2. JDK & Gradle
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      # 3. 빌드 + 테스트 + 커버리지
      - name: Build & Test with Gradle Wrapper
        run: |
          ./gradlew test jacocoTestReport build

      # 4. 리포트 아티팩트 업로드 (항상 실행)
      - name: Upload JUnit HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-html-report
          path: build/reports/tests/test/

      - name: Upload JaCoCo HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html
          path: build/reports/jacoco/test/html/

      # 5. Docker 로그인 (main 브랜치에 한해)
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Docker 이미지 Build & Push  (main 브랜치에 한해)
      - name: Build & Push Docker Image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spring-thyme-app:latest

  dependency-submission:
    needs: build-test-and-push
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582
